{"ast":null,"code":"var _jsxFileName = \"/workspaces/SentriBiz/app/src/components/StartAssessment.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../assets/css/assessment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StartAssessment = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentSectionIndex, setCurrentSectionIndex] = useState(0);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const accessToken = localStorage.getItem('accessToken');\n    if (!accessToken) {\n      navigate('/login'); // Redirect to login if not authenticated\n    } else {\n      fetchAssessmentQuestions();\n    }\n  }, [navigate]);\n  const fetchAssessmentQuestions = async () => {\n    try {\n      const response = await fetch('https://sentribiz-8az3.onrender.com/api/assessment/questions');\n      if (!response.ok) throw new Error('Failed to fetch questions');\n      const data = await response.json();\n      setQuestions(data);\n    } catch (error) {\n      console.error('Error fetching questions:', error);\n      setErrorMessage('Failed to load assessment questions.');\n    }\n  };\n  const handleChange = (questionId, value) => {\n    setAnswers(prevAnswers => ({\n      ...prevAnswers,\n      [questionId]: value\n    }));\n  };\n  const handleNext = () => {\n    if (currentQuestionIndex < questions[currentSectionIndex].questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else if (currentSectionIndex < questions.length - 1) {\n      setCurrentSectionIndex(currentSectionIndex + 1);\n      setCurrentQuestionIndex(0);\n    } else {\n      handleSubmit();\n    }\n  };\n  const handleSubmit = async () => {\n    try {\n      const response = await fetch('/api/assessment/submit', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n        },\n        body: JSON.stringify(answers)\n      });\n      if (response.ok) {\n        const result = await response.json();\n        // Handle the response from the AI integration (e.g., navigate to results page)\n        console.log(result);\n      } else {\n        const errorData = await response.json();\n        setErrorMessage(errorData.error || 'Failed to submit answers.');\n      }\n    } catch (error) {\n      console.error('Error submitting answers:', error);\n      setErrorMessage('An error occurred while submitting.');\n    }\n  };\n  const currentSection = questions[currentSectionIndex];\n  const currentQuestion = currentSection ? currentSection.questions[currentQuestionIndex] : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"assessment-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"assessment-title\",\n      children: \"Security Assessment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 30\n    }, this), currentSection && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title\",\n        children: currentSection.section\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"question-text\",\n          children: currentQuestion.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }, this), currentQuestion.type === 'text' && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input-field\",\n          onChange: e => handleChange(currentQuestion.id, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 33\n        }, this), currentQuestion.type === 'single-choice' && currentQuestion.options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: option,\n            name: `question-${currentQuestion.id}`,\n            onChange: () => {\n              handleChange(currentQuestion.id, option);\n              // Clear other input if not the \"Other\" option\n              if (option !== 'Other') {\n                handleChange(currentQuestion.id + '_other', ''); // Clear other input\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 37\n          }, this), option, option === 'Other' && answers[currentQuestion.id] === option && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-field\",\n            placeholder: \"Please specify\",\n            onChange: e => handleChange(currentQuestion.id + '_other', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 41\n          }, this)]\n        }, option, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 33\n        }, this)), currentQuestion.type === 'multiple-choice' && currentQuestion.options.map(option => {\n          var _answers$currentQuest;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              value: option,\n              onChange: e => {\n                const newValue = e.target.checked ? [...(answers[currentQuestion.id] || []), option] : (answers[currentQuestion.id] || []).filter(o => o !== option);\n                handleChange(currentQuestion.id, newValue);\n\n                // Clear other input if not the \"Other\" option\n                if (option === 'Other' && e.target.checked) {\n                  handleChange(currentQuestion.id + '_other', ''); // Clear other input\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 37\n            }, this), option, option === 'Other' && ((_answers$currentQuest = answers[currentQuestion.id]) === null || _answers$currentQuest === void 0 ? void 0 : _answers$currentQuest.includes(option)) && /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"input-field\",\n              placeholder: \"Please specify\",\n              onChange: e => handleChange(currentQuestion.id + '_other', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 41\n            }, this)]\n          }, option, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 33\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNext,\n          children: currentSectionIndex === questions.length - 1 && currentQuestionIndex === currentSection.questions.length - 1 ? 'Submit' : 'Next'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(StartAssessment, \"5FNbC3jT1du3VIvEDNqRMJBudMo=\", false, function () {\n  return [useNavigate];\n});\n_c = StartAssessment;\nexport default StartAssessment;\nvar _c;\n$RefreshReg$(_c, \"StartAssessment\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","StartAssessment","_s","questions","setQuestions","currentSectionIndex","setCurrentSectionIndex","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","errorMessage","setErrorMessage","navigate","accessToken","localStorage","getItem","fetchAssessmentQuestions","response","fetch","ok","Error","data","json","error","console","handleChange","questionId","value","prevAnswers","handleNext","length","handleSubmit","method","headers","body","JSON","stringify","result","log","errorData","currentSection","currentQuestion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","section","text","type","onChange","e","id","target","options","map","option","name","placeholder","_answers$currentQuest","newValue","checked","filter","o","includes","onClick","_c","$RefreshReg$"],"sources":["/workspaces/SentriBiz/app/src/components/StartAssessment.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../assets/css/assessment.css';\n\nconst StartAssessment = () => {\n    const [questions, setQuestions] = useState([]);\n    const [currentSectionIndex, setCurrentSectionIndex] = useState(0);\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n    const [answers, setAnswers] = useState({});\n    const [errorMessage, setErrorMessage] = useState('');\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const accessToken = localStorage.getItem('accessToken');\n        if (!accessToken) {\n            navigate('/login'); // Redirect to login if not authenticated\n        } else {\n            fetchAssessmentQuestions();\n        }\n    }, [navigate]);\n\n    const fetchAssessmentQuestions = async () => {\n        try {\n            const response = await fetch('https://sentribiz-8az3.onrender.com/api/assessment/questions');\n            if (!response.ok) throw new Error('Failed to fetch questions');\n            const data = await response.json();\n            setQuestions(data);\n        } catch (error) {\n            console.error('Error fetching questions:', error);\n            setErrorMessage('Failed to load assessment questions.');\n        }\n    };\n\n    const handleChange = (questionId, value) => {\n        setAnswers((prevAnswers) => ({\n            ...prevAnswers,\n            [questionId]: value,\n        }));\n    };\n\n    const handleNext = () => {\n        if (currentQuestionIndex < questions[currentSectionIndex].questions.length - 1) {\n            setCurrentQuestionIndex(currentQuestionIndex + 1);\n        } else if (currentSectionIndex < questions.length - 1) {\n            setCurrentSectionIndex(currentSectionIndex + 1);\n            setCurrentQuestionIndex(0);\n        } else {\n            handleSubmit();\n        }\n    };\n\n    const handleSubmit = async () => {\n        try {\n            const response = await fetch('/api/assessment/submit', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\n                },\n                body: JSON.stringify(answers),\n            });\n            if (response.ok) {\n                const result = await response.json();\n                // Handle the response from the AI integration (e.g., navigate to results page)\n                console.log(result);\n            } else {\n                const errorData = await response.json();\n                setErrorMessage(errorData.error || 'Failed to submit answers.');\n            }\n        } catch (error) {\n            console.error('Error submitting answers:', error);\n            setErrorMessage('An error occurred while submitting.');\n        }\n    };\n\n    const currentSection = questions[currentSectionIndex];\n    const currentQuestion = currentSection ? currentSection.questions[currentQuestionIndex] : null;\n\n    return (\n        <div className=\"assessment-container\">\n            <h2 className=\"assessment-title\">Security Assessment</h2>\n            {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n            {currentSection && (\n                <div className=\"section-container\">\n                    <h3 className=\"section-title\">{currentSection.section}</h3>\n                    {currentQuestion && (\n                        <div className=\"question-container\">\n                            <label className=\"question-text\">{currentQuestion.text}</label>\n                            {currentQuestion.type === 'text' && (\n                                <input\n                                    type=\"text\"\n                                    className=\"input-field\"\n                                    onChange={(e) => handleChange(currentQuestion.id, e.target.value)}\n                                />\n                            )}\n                            {currentQuestion.type === 'single-choice' && currentQuestion.options.map(option => (\n                                <div key={option}>\n                                    <input\n                                        type=\"radio\"\n                                        value={option}\n                                        name={`question-${currentQuestion.id}`}\n                                        onChange={() => {\n                                            handleChange(currentQuestion.id, option);\n                                            // Clear other input if not the \"Other\" option\n                                            if (option !== 'Other') {\n                                                handleChange(currentQuestion.id + '_other', ''); // Clear other input\n                                            }\n                                        }}\n                                    />\n                                    {option}\n                                    {option === 'Other' && answers[currentQuestion.id] === option && (\n                                        <input\n                                            type=\"text\"\n                                            className=\"input-field\"\n                                            placeholder=\"Please specify\"\n                                            onChange={(e) => handleChange(currentQuestion.id + '_other', e.target.value)}\n                                        />\n                                    )}\n                                </div>\n                            ))}\n                            {currentQuestion.type === 'multiple-choice' && currentQuestion.options.map(option => (\n                                <div key={option}>\n                                    <input\n                                        type=\"checkbox\"\n                                        value={option}\n                                        onChange={(e) => {\n                                            const newValue = e.target.checked\n                                                ? [...(answers[currentQuestion.id] || []), option]\n                                                : (answers[currentQuestion.id] || []).filter(o => o !== option);\n                                            handleChange(currentQuestion.id, newValue);\n\n                                            // Clear other input if not the \"Other\" option\n                                            if (option === 'Other' && e.target.checked) {\n                                                handleChange(currentQuestion.id + '_other', ''); // Clear other input\n                                            }\n                                        }}\n                                    />\n                                    {option}\n                                    {option === 'Other' && answers[currentQuestion.id]?.includes(option) && (\n                                        <input\n                                            type=\"text\"\n                                            className=\"input-field\"\n                                            placeholder=\"Please specify\"\n                                            onChange={(e) => handleChange(currentQuestion.id + '_other', e.target.value)}\n                                        />\n                                    )}\n                                </div>\n                            ))}\n                            <button onClick={handleNext}>\n                                {currentSectionIndex === questions.length - 1 && currentQuestionIndex === currentSection.questions.length - 1\n                                    ? 'Submit'\n                                    : 'Next'}\n                            </button>\n                        </div>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default StartAssessment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}